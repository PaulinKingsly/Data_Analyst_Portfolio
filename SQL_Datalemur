Histogram of Tweets 

SELECT tweet_bucket, COUNT(user_id)
FROM
(SELECT COUNT(tweet_id) AS tweet_bucket, user_id
FROM tweets
WHERE tweet_date > '12-31-2021' AND tweet_date < '12-31-2022'
GROUP BY user_id) t1
GROUP BY tweet_bucket

Data Science Skills 

SELECT candidate_id FROM candidates WHERE skill = 'Python'
intersect 
SELECT candidate_id FROM candidates WHERE skill = 'Tableau'
intersect
SELECT candidate_id FROM candidates WHERE skill = 'PostgreSQL'
ORDER BY candidate_id

Page With No Likes

SELECT p.page_id FROM pages p
LEFT JOIN page_likes pl 
on p.page_id = pl.page_id
WHERE liked_date is NULL
ORDER BY p.page_id ASC

Average Post Hiatus (Part 1) 

SELECT user_id, date_part('day', (max_date - min_date)) AS days_between
FROM
(SELECT user_id, MIN(post_date) AS min_date, 
MAX(post_date) AS max_date
FROM posts 
WHERE post_date > '12-31-2020' AND post_date < '01-01-2022'
GROUP BY user_id
HAVING COUNT(post_date) >= 2) t1

Compressed Mean 

SELECT ROUND( SUM(item_count * order_occurrences )::numeric /
  SUM(order_occurrences)::numeric, 1) as mean
FROM items_per_order

